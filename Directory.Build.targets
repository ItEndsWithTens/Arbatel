<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Target Name="RemoveSupportDirectories" BeforeTargets="Clean">
    <RemoveDir Directories="$(OutputPath)lib" />
    <RemoveDir Directories="$(OutputPath)shaders" />
  </Target>

  <PropertyGroup>
    <NoNeatenize>_build;$(Product).Core;$(Product)Test.Core</NoNeatenize>

    <IsWindowsProject>false</IsWindowsProject>
    <IsWindowsProject Condition="$(MSBuildProjectName.Contains('WinForms'))">true</IsWindowsProject>
    <IsWindowsProject Condition="$(MSBuildProjectName.Contains('Wpf'))">true</IsWindowsProject>
    <IsWindowsProject Condition="$(MSBuildProjectName.Contains('Test.Rendering')) AND $(BuildOS) == 'Windows'">true</IsWindowsProject>

    <IsLinuxProject>false</IsLinuxProject>
    <IsLinuxProject Condition="$(MSBuildProjectName.Contains('Gtk'))">true</IsLinuxProject>
    <IsLinuxProject Condition="$(MSBuildProjectName.Contains('Test.Rendering')) AND $(BuildOS) == 'Linux'">true</IsLinuxProject>

    <IsMacProject>false</IsMacProject>
    <IsMacProject Condition="$(MSBuildProjectName.Contains('Mac'))">true</IsMacProject>
    <IsMacProject Condition="$(MSBuildProjectName.Contains('Test.Rendering')) AND $(BuildOS) == 'macOS'">true</IsMacProject>
  </PropertyGroup>

  <PropertyGroup>
    <RuntimeIdentifier Condition="$(IsWindowsProject)">win-x64</RuntimeIdentifier>
    <RuntimeIdentifier Condition="$(IsLinuxProject)">linux-x64</RuntimeIdentifier>
    <RuntimeIdentifier Condition="$(IsMacProject)">osx-x64</RuntimeIdentifier>
  </PropertyGroup>

  <Target Name="SetNeatenizePath" AfterTargets="Build" BeforeTargets="NeatenizeLibraries">
    <PropertyGroup>
      <NeatenizePath Condition="$(IsMacProject) AND $(OutputAppPath) != ''">$(OutputAppPath)\Contents\MonoBundle\</NeatenizePath>
      <NeatenizePath Condition="!$(IsMacProject) OR $(OutputAppPath) == ''">$(OutputPath)</NeatenizePath>
    </PropertyGroup>
  </Target>

  <!-- The output GUI executables' config files are hideous enough, the least a
  build process can do is keep this project's various dependencies organized. In
  concert with the App.config files and their 'probing' element's 'privatePath'
  parameter, this makes the directory tree cleaner and more presentable. -->
  <Target Name="NeatenizeLibraries" AfterTargets="SetNeatenizePath" Condition="!$(NoNeatenize.Contains($(MSBuildProjectName)))">
    <ItemGroup>
      <Uglies Include="$(NeatenizePath)*" />
      <Uglies Remove="$(NeatenizePath)$(AssemblyName).exe" />
      <Uglies Remove="$(NeatenizePath)$(AssemblyName).exe.config" />
      <Uglies Remove="$(NeatenizePath)$(AssemblyName).pdb" />
      <Uglies Remove="$(NeatenizePath)shaders" />
      <Uglies Remove="$(NeatenizePath)Xamarin.Mac.dll" />
      <Uglies Remove="$(NeatenizePath)Xamarin.Mac.pdb" />
    </ItemGroup>
    <Move SourceFiles="@(Uglies)" DestinationFolder="$(NeatenizePath)lib" />
  </Target>

  <PropertyGroup>
    <NoCopyShaders>_build</NoCopyShaders>
  </PropertyGroup>

  <Target Name="CopyShaders" AfterTargets="NeatenizeLibraries" Condition="!$(NoCopyShaders.Contains($(MSBuildProjectName)))">
    <ItemGroup>
      <Shaders Include="$(TopLevelDirectory)src\shaders\**\*" />
    </ItemGroup>
    <Copy Condition="$(OutputAppPath) != ''" SourceFiles="@(Shaders)" DestinationFolder="$(OutputAppPath)\Contents\MonoBundle\shaders\%(Shaders.RecursiveDir)"/>
    <Copy Condition="$(OutputAppPath) == ''" SourceFiles="@(Shaders)" DestinationFolder="$(OutputPath)\shaders\%(Shaders.RecursiveDir)" />
  </Target>

</Project>
